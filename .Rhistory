m<-1
m
s <- list(foo=1:5, bar=0.2)
s[[[1]]]
s[[1]]
s$foo
m<-matrix(1:5,3,7)
m<-matrix(1:3,3,7)
m
m[,2]
m[1,]
m[,2 drop=FALSE]
m[,2, drop=FALSE]
cas<-c("a","b",NA,NA,"c")
good<-complete.cases(x)
good<-complete.cases(cas)
cas[good]
cas<-c(Nan)
cas<-c(NaN)
cas
x<-1:4; y<-1:5
x+y
y<-1:8
x+y
getwd()
source("hw1_data.csv")
read.csv("hw1_data.csv")
x<-read.csv("hw1_data")
x<-read.csv("hw1_data.csv")
x[2,]
x[1:2,]
x[152:152,]
x[152:153,]
x[147,[ozone]]
x[147,]
x[47,]
x[47,ozone]
x[47,"ozone"]
good<-complete.data(x)
good<-complete.cases(x)
x[good]
x[good,]
x[good,1]
x[!good,1]
mean(x[good,1])
x[[ozone]]
x[[ozone],]
x[ozone>31]
x["ozone">31]
x["ozone">31] and x["temp">90]
x["ozone">31] && x["temp">90]
x["ozone">31 && "temp>90]
jndsi
x["ozone">31]
x["ozone">31]
x["ozone">31,"temp>90]
x["ozone">31,"temp">90]
x["ozone">31,"temp">90]
mean(x["solar.r"])
mean(x[,"solar.r"])
mean(x[,"solar.r",])
mean(x["solar.r",])
x[,"solar.r"}
x[,"solar.r"]
x[,"solar.r"]
print<-function(x){
if(x==c(1:10)){
x}
else{
stop("Not correct")}
}
print(9)
print(1)
outcome<-read.csv(""outcome-of-care-measures.csv")
outcome<-read.csv("outcome-of-care-measures.csv")
outcome$hospital.names
mat<-matrix(outcome)
mat
outcome
q()
source('~/.active-rstudio-document')
x
xx
library(XML)
library('XML')
install.packages("XML")
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
doc <- xmlTreeParse(sub("s", "", fileUrl), useInternal = TRUE)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
rootNode<-xmlRoot(doc)
xmlName(rootNode)
source('~/.active-rstudio-document')
dt1<-data.table(data)
library(data.table)
dt1<-data.table(data)
dt1[,1]
dt1[1]
dt1
data
source('~/.active-rstudio-document')
dt11
dt1
dt1<-data.table(csvdata)
dt1<-data.table(csvdata.csv)
dt1<-data.table("csvdata.csv")
dt1[,1]
dt1[[1]]
source('~/.active-rstudio-document')
dt1<-data.table(rdata)
dt1[,1]
dt1[1,]
ncol(dt1)
nrow(dt1)
dtval<-dt1[val]
dtval<-dt1[VAL]
dtval<-dt1[dt1$VAL]
dtval
dtval<-dt1[VAL==TRUE]
dtval$VAL
dtval[dtval$VAL]
dtval[col=VAL]
dtval[col==VAL]
dtval[1,1]
dtval[VAL,1]
dtval[dtval$VAL[1,1]]
dtval[dtval$VAL[1]]
dtval$RT
dtval$VAL
dtval$REGION
dt1
nrow(dt1)
dt1$VAL
dtval<-dt1[VAL==TRUE]
dtval
dt1$VAL
dtval<-dt1[!is.na(dt1)]
dtval<-dt1[!is.na(dt1$VAL)]
dtval
nrows(dtval)
nrow(dtval)
nrow(dt1)
dtmil<-dtval[dtval$VAL>=24]
dtmil
nrow(dtmil)
source('~/.active-rstudio-document')
dt2
dt2<-data.table(rdatan)
rdatan<-read.xlsx("Natural.xlsx")
dt2<-data.table(rdatan)
rdatan<-read.xlsx("Natural.xlsx")
rdatan<-read.table("Natural.xlsx")
source('~/.active-rstudio-document')
library("xlsx")
source('~/.active-rstudio-document')
rdatan<-read.xlsx("Natural.xlsx")
library("xlsx")
library("xlsx")
library("xlsx")
install.packages("xlsx")
library("xlsx")
source('~/ProgrammingAssignment2/dataClean.R')
package.install("rJava")
install.package("rJava")
install.packages("rJava")
library("xlsx")
library("xlsx")
library("xlsx")
library("xlsx")
library("xlsx")
library("xlsx")
install.packages("xlsx")
library("xlsx")
library("xlsx")
install.package("rJava")
install.packages("rJava")
install.packages("xlsx")
library("xlsx")
library("xlsx")
library("xlsx")
library("xlsx")
library("xlsx")1
Sys.setenv(JAVA_HOME="C:\Program Files (x86)\Java\jre1.8.0_241")
Sys.setenv(JAVA_HOME="C:\Program Files (x86)\Java\jre1.8.0_241")
Sys.setenv(JAVA_HOME="C:\\Program Files (x86)\\Java\\jre1.8.0_241")
library("xlsx")1
library("xlsx")
sudo R CMD javareconf
library(rJava)
.jinit()
.jcall("java/lang/System", "S", "getProperty", "java.runtime.version")
install.packages("readxl")
library("readxl")
myxl<-read_xl("Natural.xlsx")
myxl<-read_excel("Natural.xlsx")
getwd()
install.packages("rJava")
library("rJava")
library("xlsx")
q()
x<-data.frame(var1=sample(1:10), var2=sample(15:18))
x<-data.frame(var1=sample(1:10), var2=sample(15:25))
x<-data.frame(var1=sample(1:10), var2=sample(15:24))
x
x[x$var1>8]=NA
x[x$var1>8]
x[x$var1>8]
x[x$var1>8,]
x[x$var1>8,]=NA
x
x<-data.frame(var1=sample(1:10), var2=sample(15:24))
x[x$var1>8,var2]=NA
x[x$var1>8,"var2"]=NA
x
x[x$var1>8,]
x[which(x$var1>5),]
x[which(x$var2>5),]
x[x$var2>5,]
sort[x$var1]
sort(x$var1)
sort(x$var2)
sort(x$var2,na.last=T)
x$var3=c(20:29)
x
rbind(x,c(12.4,33.2,4))
rbind(x,c(12.4,33.2,4,4))
rbind(x,c(12.4,33.2,4,4.666))
rbind(x,c(12.4,33.2,4.666))
data(x)
data(UCBAdmissions)
df<-as.data.frame(UCBAdmissions)
summary(df)
q()
